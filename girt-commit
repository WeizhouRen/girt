#!/bin/dash

# test .girt exists
if ! test -d .girt
then
	echo "$0: error: girt repository directory .girt not found"
	exit 1
fi
# get branch
branch=$( cat .girt/branch )

# Get commit message
commit_msg=""
a="false"

if test $# = 3 && test "$1" = "-a"
then
	a="true"
	if test "$2" = "-m"
	then
		commit_msg="$3"
	else
		echo "usage: girt-commit [-a] -m commit-message"
		exit 1
	fi
elif test $# = 2 && test "$1" = "-m" 
then
	commit_msg="$2"
else
	echo "usage: girt-commit [-a] -m commit-message"
	exit 1
fi

# Test commit message should not start with '-'
if echo "$commit_msg" | grep -E '^-' > /dev/null || test "${#commit_msg}" -eq 0 > /dev/null
then 
	echo "usage: girt-commit [-a] -m commit-message"
	exit 1
fi

# -a option, which causes all files already in the index to have their contents 
# from the current directory added to the index before the commit.

if test "$a" = "true"
then
	for file in .girt/${branch}/index/*
	do
		filename=$( echo "$file" | cut -d'/' -f4 ) 	# get target file
		if test -f "$filename"
		then
			cp "$filename" "$file"					# add to index
		fi
	done
fi


# The girt-commit command saves a copy of all files in the index to the repository.
logs=".girt/${branch}/logs"
commit_no=$( cat "$logs" | wc -l )
nothing_to_commit="true"
# compare file in index with last commit
if test "$commit_no" -gt 0
then
	last_commit_no=$(( commit_no - 1 ))
	# last commit is not empty
	if test $( ls .girt/${branch}/commit_${last_commit_no} | wc -l ) -gt 0
	then 
		# iterate file last commit and compare with file in index
		for file in .girt/${branch}/commit_${last_commit_no}/*
		do
			filename=$( echo "$file" | cut -d'/' -f4 )
			index_file=".girt/${branch}/index/${filename}"
			repo_file=".girt/${branch}/repository/${filename}"
			# file does not exist in index, but not in last commit
			# should also be removed from repo
			if ! test -f $index_file
			then
				nothing_to_commit="false"
				if test -f $repo_file
				then 
					rm $repo_file
				fi
			else
				# file exsists, compare file content
				if ! cmp -s $file $index_file
				then
					nothing_to_commit="false"
				fi
			fi
		done
	fi

	
	if test $( ls .girt/${branch}/index | wc -l ) -gt 0
	then 
		# iterate file in index to compare with last commit file
		for file in .girt/${branch}/index/*
		do
			filename=$( echo "$file" | cut -d'/' -f4 )
			last_commit_file=".girt/$branch/commit_${last_commit_no}/${filename}"
			if test -f "$last_commit_file"
			then
				if ! cmp -s $file $last_commit_file
				then
					nothing_to_commit="false"
				fi
			else
				# file exists in index, but not in repo
				nothing_to_commit="false"
			fi
		done
	fi
	

fi

if test $commit_no -gt 0 && $nothing_to_commit = "true"
then
	echo "nothing to commit"
	exit 1
fi

# commit before add will raise usage error (when index is empty)
index_size=$( ls .girt/${branch}/index |wc -l )
if test "$index_size" -eq 0 && $nothing_to_commit = "true"
then
	echo "nothing to commit"
	exit 1
fi

# copy from index to repository
commit_dir=".girt/${branch}/commit_${commit_no}"
mkdir "$commit_dir"
if test $( ls .girt/${branch}/index/ | wc -l ) -gt 0
then
	for file in .girt/${branch}/index/*
	do
		# commit to repo
		filename=$( echo "$file" | cut -d'/' -f4 )
		dest=".girt/${branch}/repository/${filename}"
		cp "$file" "$dest"
		# save commit version
		cp "$file" ".girt/${branch}/commit_${commit_no}/${filename}"
	done
fi


echo "Committed as commit ${commit_no}"

# append info to logs file
content="${commit_no} ${commit_msg}"
echo "${content}" >> $logs